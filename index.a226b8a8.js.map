{"mappings":"ACEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAQ,EAAM,aAAa,CAAC,SAGlC,AAFgB,EAAM,gBAAgB,CAAC,MAE/B,OAAO,CAAC,SAAC,CAAA,CAAI,CAArB,EACE,EAAG,gBAAgB,CAAC,QAAS,WAC3B,IAAM,EAAO,MAAM,IAAI,CAAC,EAAM,gBAAgB,CAAC,OACzC,EAAiB,AAAU,IAAV,GAAe,AAAU,IAAV,EAEtC,EAAK,IAAI,CAAC,SAAC,CAAA,CAAG,CAAd,EACE,IAAM,EAAQ,EAAE,KAAK,CAAC,EAAM,CAAC,WAAW,CAAC,IAAI,GACvC,EAAQ,EAAE,KAAK,CAAC,EAAM,CAAC,WAAW,CAAC,IAAI,UAE7C,AAAI,EAIK,AAHQ,WAAW,EAAM,OAAO,CAAC,QAAS,KAClC,WAAW,EAAM,OAAO,CAAC,QAAS,KAI1C,EAAM,aAAa,CAAC,EAAO,KAAA,EAAW,CAAE,YAAa,MAAO,EAEvE,GAEA,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAM,WAAW,CAAC,E,EAC1C,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar table = document.querySelector(\"table\");\nvar tbody = table.querySelector(\"tbody\");\nvar headers = table.querySelectorAll(\"th\"); // Виправлено на querySelectorAll\nheaders.forEach(function(th, index) {\n    th.addEventListener(\"click\", function() {\n        var rows = Array.from(tbody.querySelectorAll(\"tr\"));\n        var isNumberColumn = index === 2 || index === 3;\n        rows.sort(function(a, b) {\n            var aText = a.cells[index].textContent.trim();\n            var bText = b.cells[index].textContent.trim();\n            if (isNumberColumn) {\n                var aValue = parseFloat(aText.replace(/[$,]/g, \"\"));\n                var bValue = parseFloat(bText.replace(/[$,]/g, \"\"));\n                return aValue - bValue;\n            } else return aText.localeCompare(bText, undefined, {\n                sensitivity: \"base\"\n            });\n        });\n        rows.forEach(function(row) {\n            return tbody.appendChild(row);\n        });\n    });\n});\n\n//# sourceMappingURL=index.a226b8a8.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst tbody = table.querySelector('tbody');\nconst headers = table.querySelectorAll('th'); // Виправлено на querySelectorAll\n\nheaders.forEach((th, index) => {\n  th.addEventListener('click', () => {\n    const rows = Array.from(tbody.querySelectorAll('tr'));\n    const isNumberColumn = index === 2 || index === 3;\n\n    rows.sort((a, b) => {\n      const aText = a.cells[index].textContent.trim();\n      const bText = b.cells[index].textContent.trim();\n\n      if (isNumberColumn) {\n        const aValue = parseFloat(aText.replace(/[$,]/g, ''));\n        const bValue = parseFloat(bText.replace(/[$,]/g, ''));\n\n        return aValue - bValue;\n      } else {\n        return aText.localeCompare(bText, undefined, { sensitivity: 'base' });\n      }\n    });\n\n    rows.forEach((row) => tbody.appendChild(row));\n  });\n});\n"],"names":["table","document","querySelector","tbody","headers","querySelectorAll","forEach","th","index","addEventListener","rows","Array","from","isNumberColumn","sort","a","b","aText","cells","textContent","trim","bText","aValue","parseFloat","replace","localeCompare","undefined","sensitivity","row","appendChild"],"version":3,"file":"index.a226b8a8.js.map"}